name: Rust

on:
  push:
    branches: [ "main", "prod" ]
  pull_request:
    branches: [ "main" ]



jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: wasm32-unknown-unknown
      - uses: actions/setup-node@v3
        with:
          node-version: "14.x"
      - run: npm run build
      - name: Push
        uses: s0/git-publish-subdir-action@develop
        if: ${{ github.ref }} == 'refs/heads/prod'
        env:
          REPO: self
          BRANCH: prod-build # The branch name where you want to push the assets
          FOLDER: dist # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message
      - name: Push
        uses: s0/git-publish-subdir-action@develop
        if: ${{ github.ref }} == 'refs/heads/main'
        env:
          REPO: self
          BRANCH: nightly # The branch name where you want to push the assets
          FOLDER: dist # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message
      - name: Push
        uses: s0/git-publish-subdir-action@develop
        if: ${{ github.event_name == 'pull_request' }}
        env:
          REPO: self
          BRANCH: pr-${{ github.event.pull_request.number }} # The branch name where you want to push the assets
          FOLDER: dist # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message

